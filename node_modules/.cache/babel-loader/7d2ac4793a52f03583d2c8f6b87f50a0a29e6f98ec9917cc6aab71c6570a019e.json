{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport './AdministradordeImagenes.css'; // Importa el archivo CSS para los estilos del administrador de imágenes\n\nclass AdministradordeImagenes {\n  static async getAllImagenes() {\n    try {\n      const response = await fetch('http://localhost:3001/imagen/getAllImagenes');\n      if (!response.ok) {\n        throw new Error('Error al obtener todas las imágenes');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al obtener todas las imágenes:', error.message);\n      throw error;\n    }\n  }\n  static async getImagenById(idImagen) {\n    try {\n      const response = await fetch(`http://localhost:3001/imagen/getImagen/${idImagen}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(`Error al obtener la imagen con ID ${idImagen}:`, error.message);\n      throw error;\n    }\n  }\n  static async crearImagen(idAlojamiento, rutaArchivo) {\n    try {\n      const response = await fetch('http://localhost:3001/imagen/createImagen', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idAlojamiento,\n          RutaArchivo: rutaArchivo\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al crear la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al crear la imagen:', error.message);\n      throw error;\n    }\n  }\n  static async actualizarImagen(idImagen, idAlojamiento, rutaArchivo) {\n    try {\n      const response = await fetch(`http://localhost:3001/imagen/updateImagen/${idImagen}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idAlojamiento,\n          RutaArchivo: rutaArchivo\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al actualizar la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(`Error al actualizar la imagen con ID ${idImagen}:`, error.message);\n      throw error;\n    }\n  }\n  static async eliminarImagen(idImagen) {\n    try {\n      const response = await fetch(`http://localhost:3001/imagen/deleteImagen/${idImagen}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Error al eliminar la imagen');\n      }\n\n      // No hay datos retornados en una eliminación exitosa (204 No Content)\n      return true;\n    } catch (error) {\n      console.error(`Error al eliminar la imagen con ID ${idImagen}:`, error.message);\n      throw error;\n    }\n  }\n}\nexport default AdministradordeImagenes;","map":{"version":3,"names":["React","useEffect","useState","AdministradordeImagenes","getAllImagenes","response","fetch","ok","Error","data","json","error","console","message","getImagenById","idImagen","crearImagen","idAlojamiento","rutaArchivo","method","headers","body","JSON","stringify","RutaArchivo","actualizarImagen","eliminarImagen"],"sources":["C:/Users/grego/Desktop/desarrollo-web/src/components/AdministradordeImagenes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './AdministradordeImagenes.css'; // Importa el archivo CSS para los estilos del administrador de imágenes\r\n\r\nclass AdministradordeImagenes {\r\n  static async getAllImagenes() {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/imagen/getAllImagenes');\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener todas las imágenes');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al obtener todas las imágenes:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getImagenById(idImagen) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/imagen/getImagen/${idImagen}`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error(`Error al obtener la imagen con ID ${idImagen}:`, error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async crearImagen(idAlojamiento, rutaArchivo) {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/imagen/createImagen', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idAlojamiento,\r\n          RutaArchivo: rutaArchivo,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al crear la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al crear la imagen:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async actualizarImagen(idImagen, idAlojamiento, rutaArchivo) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/imagen/updateImagen/${idImagen}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idAlojamiento,\r\n          RutaArchivo: rutaArchivo,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error(`Error al actualizar la imagen con ID ${idImagen}:`, error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async eliminarImagen(idImagen) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/imagen/deleteImagen/${idImagen}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar la imagen');\r\n      }\r\n\r\n      // No hay datos retornados en una eliminación exitosa (204 No Content)\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Error al eliminar la imagen con ID ${idImagen}:`, error.message);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AdministradordeImagenes;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,+BAA+B,CAAC,CAAC;;AAExC,MAAMC,uBAAuB,CAAC;EAC5B,aAAaC,cAAcA,CAAA,EAAG;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;MAE3E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MACxD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACE,OAAO,CAAC;MACpE,MAAMF,KAAK;IACb;EACF;EAEA,aAAaG,aAAaA,CAACC,QAAQ,EAAE;IACnC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0CS,QAAQ,EAAE,CAAC;MAElF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqCI,QAAQ,GAAG,EAAEJ,KAAK,CAACE,OAAO,CAAC;MAC9E,MAAMF,KAAK;IACb;EACF;EAEA,aAAaK,WAAWA,CAACC,aAAa,EAAEC,WAAW,EAAE;IACnD,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBN,aAAa;UACbO,WAAW,EAAEN;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;MACzD,MAAMF,KAAK;IACb;EACF;EAEA,aAAac,gBAAgBA,CAACV,QAAQ,EAAEE,aAAa,EAAEC,WAAW,EAAE;IAClE,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CS,QAAQ,EAAE,EAAE;QACpFI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBN,aAAa;UACbO,WAAW,EAAEN;QACf,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwCI,QAAQ,GAAG,EAAEJ,KAAK,CAACE,OAAO,CAAC;MACjF,MAAMF,KAAK;IACb;EACF;EAEA,aAAae,cAAcA,CAACX,QAAQ,EAAE;IACpC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6CS,QAAQ,EAAE,EAAE;QACpFI,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;;MAEA;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsCI,QAAQ,GAAG,EAAEJ,KAAK,CAACE,OAAO,CAAC;MAC/E,MAAMF,KAAK;IACb;EACF;AACF;AAEA,eAAeR,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}