{"ast":null,"code":"const obtenerCiudadCoordenadas = async (latitud, longitud) => {\n  const API_KEY = 'e98bddb6c592457fbf85fae6b0ac704e'; // Reemplaza con tu propia API KEY de OpenCage\n\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitud}+${longitud}&key=${API_KEY}&language=es&pretty=1`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Error al obtener la ciudad desde las coordenadas');\n    }\n    const data = await response.json();\n    if (data.results.length > 0) {\n      return data.results[0].components.city || data.results[0].components.town || data.results[0].components.village || 'Ciudad desconocida';\n    } else {\n      return 'Ciudad desconocida';\n    }\n  } catch (error) {\n    console.error('Error en obtenerCiudadCoordenadas:', error.message);\n    return 'Ciudad desconocida';\n  }\n};","map":{"version":3,"names":["obtenerCiudadCoordenadas","latitud","longitud","API_KEY","url","response","fetch","ok","Error","data","json","results","length","components","city","town","village","error","console","message"],"sources":["C:/Users/grego/Desktop/desarrollo-web/src/components/obtenerCiudadCoordenadas.js"],"sourcesContent":["const obtenerCiudadCoordenadas = async (latitud, longitud) => {\r\n  const API_KEY = 'e98bddb6c592457fbf85fae6b0ac704e'; // Reemplaza con tu propia API KEY de OpenCage\r\n\r\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitud}+${longitud}&key=${API_KEY}&language=es&pretty=1`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error('Error al obtener la ciudad desde las coordenadas');\r\n    }\r\n    const data = await response.json();\r\n    if (data.results.length > 0) {\r\n      return data.results[0].components.city || data.results[0].components.town || data.results[0].components.village || 'Ciudad desconocida';\r\n    } else {\r\n      return 'Ciudad desconocida';\r\n    }\r\n  } catch (error) {\r\n    console.error('Error en obtenerCiudadCoordenadas:', error.message);\r\n    return 'Ciudad desconocida';\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,KAAK;EAC5D,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;;EAEpD,MAAMC,GAAG,GAAG,kDAAkDH,OAAO,IAAIC,QAAQ,QAAQC,OAAO,uBAAuB;EAEvH,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;IACrE;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3B,OAAOH,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,UAAU,CAACC,IAAI,IAAIL,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,UAAU,CAACE,IAAI,IAAIN,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACE,UAAU,CAACG,OAAO,IAAI,oBAAoB;IACzI,CAAC,MAAM;MACL,OAAO,oBAAoB;IAC7B;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAClE,OAAO,oBAAoB;EAC7B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}