{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grego\\\\Desktop\\\\desarrollo-web\\\\src\\\\components\\\\ObtenerCiudad.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObtenerCiudad = ({\n  latitud,\n  longitud\n}) => {\n  _s();\n  const [ciudad, setCiudad] = useState('');\n  useEffect(() => {\n    const obtenerCiudad = async () => {\n      const apiKey = 'e98bddb6c592457fbf85fae6b0ac704e';\n      const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitud}+${longitud}&key=${apiKey}&language=es&pretty=1`;\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.results && data.results[0] && data.results[0].components) {\n          setCiudad(data.results[0].components.city || 'Desconocida');\n        } else {\n          setCiudad('Desconocida');\n        }\n      } catch (error) {\n        console.error('Error fetching city:', error);\n        setCiudad('Error');\n      }\n    };\n    obtenerCiudad();\n  }, [latitud, longitud]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: ciudad\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n_s(ObtenerCiudad, \"qTQPMIrBWtSZXZxpBRIr6wfGrbA=\");\n_c = ObtenerCiudad;\nexport default ObtenerCiudad;\nvar _c;\n$RefreshReg$(_c, \"ObtenerCiudad\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ObtenerCiudad","latitud","longitud","_s","ciudad","setCiudad","obtenerCiudad","apiKey","url","response","fetch","data","json","results","components","city","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/grego/Desktop/desarrollo-web/src/components/ObtenerCiudad.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ObtenerCiudad = ({ latitud, longitud }) => {\r\n  const [ciudad, setCiudad] = useState('');\r\n\r\n  useEffect(() => {\r\n    const obtenerCiudad = async () => {\r\n      const apiKey = 'e98bddb6c592457fbf85fae6b0ac704e';\r\n      const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitud}+${longitud}&key=${apiKey}&language=es&pretty=1`;\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.results && data.results[0] && data.results[0].components) {\r\n          setCiudad(data.results[0].components.city || 'Desconocida');\r\n        } else {\r\n          setCiudad('Desconocida');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching city:', error);\r\n        setCiudad('Error');\r\n      }\r\n    };\r\n\r\n    obtenerCiudad();\r\n  }, [latitud, longitud]);\r\n\r\n  return <span>{ciudad}</span>;\r\n};\r\n\r\nexport default ObtenerCiudad;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAG,kCAAkC;MACjD,MAAMC,GAAG,GAAG,kDAAkDP,OAAO,IAAIC,QAAQ,QAAQK,MAAM,uBAAuB;MAEtH,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,UAAU,EAAE;UACjET,SAAS,CAACM,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,IAAI,IAAI,aAAa,CAAC;QAC7D,CAAC,MAAM;UACLV,SAAS,CAAC,aAAa,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CX,SAAS,CAAC,OAAO,CAAC;MACpB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,OAAO,EAAEC,QAAQ,CAAC,CAAC;EAEvB,oBAAOH,OAAA;IAAAmB,QAAA,EAAOd;EAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC9B,CAAC;AAACnB,EAAA,CA1BIH,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}