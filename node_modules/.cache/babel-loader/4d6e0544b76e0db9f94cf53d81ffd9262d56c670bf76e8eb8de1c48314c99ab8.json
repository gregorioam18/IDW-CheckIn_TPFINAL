{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport './AdministradordeImagenes.css'; //\n\nclass AdministradordeImagenes {\n  static async crearImagen(idAlojamiento, rutaArchivo) {\n    try {\n      const response = await fetch('http://localhost:3001/imagen/createImagen', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idAlojamiento,\n          RutaArchivo: rutaArchivo\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al crear la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al crear la imagen:', error.message);\n      throw error;\n    }\n  }\n  static async obtenerImagenPorId(idImagen) {\n    try {\n      const response = await fetch(`http://localhost:3001/imagen/getImagen/${idImagen}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al obtener la imagen:', error.message);\n      throw error;\n    }\n  }\n  static async actualizarImagen(idImagen, idAlojamiento, rutaArchivo) {\n    try {\n      const response = await fetch(`http://localhost:3001/imagen/updateImagen/${idImagen}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idAlojamiento,\n          RutaArchivo: rutaArchivo\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error al actualizar la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al actualizar la imagen:', error.message);\n      throw error;\n    }\n  }\n  static async eliminarImagen(idImagen) {\n    try {\n      const response = await fetch(`http://localhost:3001/imagen/deleteImagen/${idImagen}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Error al eliminar la imagen');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al eliminar la imagen:', error.message);\n      throw error;\n    }\n  }\n  static async obtenerTodasLasImagenes() {\n    try {\n      const response = await fetch('http://localhost:3001/imagen/getAllImagenes');\n      if (!response.ok) {\n        throw new Error('Error al obtener todas las im치genes');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error al obtener todas las im치genes:', error.message);\n      throw error;\n    }\n  }\n  static async guardarImagenEnCarpeta(rutaArchivo, imagenBlob) {\n    const blobUrl = window.URL.createObjectURL(imagenBlob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = blobUrl;\n    a.download = rutaArchivo;\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(blobUrl);\n    console.log(`Imagen guardada en ${rutaArchivo}`);\n    return rutaArchivo;\n  }\n}\nexport default AdministradordeImagenes;","map":{"version":3,"names":["React","useEffect","useState","AdministradordeImagenes","crearImagen","idAlojamiento","rutaArchivo","response","fetch","method","headers","body","JSON","stringify","RutaArchivo","ok","Error","data","json","error","console","message","obtenerImagenPorId","idImagen","actualizarImagen","eliminarImagen","obtenerTodasLasImagenes","guardarImagenEnCarpeta","imagenBlob","blobUrl","window","URL","createObjectURL","a","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","log"],"sources":["C:/Users/grego/Desktop/desarrollo-web/src/components/AdministradordeImagenes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './AdministradordeImagenes.css'; //\r\n\r\nclass AdministradordeImagenes {\r\n  static async crearImagen(idAlojamiento, rutaArchivo) {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/imagen/createImagen', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idAlojamiento,\r\n          RutaArchivo: rutaArchivo,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al crear la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al crear la imagen:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async obtenerImagenPorId(idImagen) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/imagen/getImagen/${idImagen}`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al obtener la imagen:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async actualizarImagen(idImagen, idAlojamiento, rutaArchivo) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/imagen/updateImagen/${idImagen}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          idAlojamiento,\r\n          RutaArchivo: rutaArchivo,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al actualizar la imagen:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async eliminarImagen(idImagen) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/imagen/deleteImagen/${idImagen}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar la imagen');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al eliminar la imagen:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async obtenerTodasLasImagenes() {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/imagen/getAllImagenes');\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener todas las im치genes');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error al obtener todas las im치genes:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async guardarImagenEnCarpeta(rutaArchivo, imagenBlob) {\r\n    const blobUrl = window.URL.createObjectURL(imagenBlob);\r\n    const a = document.createElement('a');\r\n    a.style.display = 'none';\r\n    a.href = blobUrl;\r\n    a.download = rutaArchivo;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    window.URL.revokeObjectURL(blobUrl);\r\n\r\n    console.log(`Imagen guardada en ${rutaArchivo}`);\r\n    return rutaArchivo;\r\n  }\r\n}\r\n\r\nexport default AdministradordeImagenes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}