{"ast":null,"code":"const obtenerCiudadCoordenadas = async ciudad => {\n  const apiKey = 'e98bddb6c592457fbf85fae6b0ac704e';\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${ciudad}&key=${apiKey}&language=es&pretty=1`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Error al obtener los datos de la API');\n    }\n    const data = await response.json();\n    if (data.results && data.results[0] && data.results[0].geometry) {\n      return {\n        latitud: data.results[0].geometry.lat,\n        longitud: data.results[0].geometry.lng\n      };\n    } else {\n      throw new Error('No se pudo encontrar la ubicación en los datos de la API');\n    }\n  } catch (error) {\n    console.error('Error fetching city coordinates:', error);\n    return null;\n  }\n};\nexport default obtenerCiudadCoordenadas;","map":{"version":3,"names":["obtenerCiudadCoordenadas","ciudad","apiKey","url","response","fetch","ok","Error","data","json","results","geometry","latitud","lat","longitud","lng","error","console"],"sources":["C:/Users/grego/Desktop/desarrollo-web/src/components/obtenerCiudadCoordenadas.js"],"sourcesContent":["const obtenerCiudadCoordenadas = async (ciudad) => {\r\n  const apiKey = 'e98bddb6c592457fbf85fae6b0ac704e';\r\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${ciudad}&key=${apiKey}&language=es&pretty=1`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error('Error al obtener los datos de la API');\r\n    }\r\n    const data = await response.json();\r\n    if (data.results && data.results[0] && data.results[0].geometry) {\r\n      return {\r\n        latitud: data.results[0].geometry.lat,\r\n        longitud: data.results[0].geometry.lng\r\n      };\r\n    } else {\r\n      throw new Error('No se pudo encontrar la ubicación en los datos de la API');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching city coordinates:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default obtenerCiudadCoordenadas;\r\n"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG,MAAOC,MAAM,IAAK;EACjD,MAAMC,MAAM,GAAG,kCAAkC;EACjD,MAAMC,GAAG,GAAG,kDAAkDF,MAAM,QAAQC,MAAM,uBAAuB;EAEzG,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;IACzD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,IAAIF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;MAC/D,OAAO;QACLC,OAAO,EAAEJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACE,GAAG;QACrCC,QAAQ,EAAEN,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACI;MACrC,CAAC;IACH,CAAC,MAAM;MACL,MAAM,IAAIR,KAAK,CAAC,0DAA0D,CAAC;IAC7E;EACF,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,IAAI;EACb;AACF,CAAC;AAED,eAAehB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}