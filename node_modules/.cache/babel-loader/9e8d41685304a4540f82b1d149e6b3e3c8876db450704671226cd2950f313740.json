{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grego\\\\Desktop\\\\desarrollo-web\\\\src\\\\components\\\\AdministradordeImagenes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AdministradordeImagenes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdministradordeImagenes = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadSuccess, setUploadSuccess] = useState(false);\n  const [uploadedFilePath, setUploadedFilePath] = useState('');\n  const IMGBB_API_KEY = 'fe710239ec2669c60deafe46f166c86d'; // Reemplaza con tu API key de ImgBB\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const uploadRes = await axios.post(`https://api.imgbb.com/1/upload?key=${IMGBB_API_KEY}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const {\n        url\n      } = uploadRes.data.data;\n      setUploadedFilePath(url);\n      const saveImageRes = await axios.post('http://localhost:5000/imagen/createImagen', {\n        idAlojamiento: 1,\n        RutaArchivo: url\n      });\n      if (saveImageRes.status === 200) {\n        setUploadSuccess(true);\n      }\n    } catch (err) {\n      console.error(err);\n      setUploadSuccess(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Administrador de Im\\xE1genes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Subir Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), uploadSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: [\"Imagen subida exitosamente. URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: uploadedFilePath,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: uploadedFilePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AdministradordeImagenes, \"2c1vPoP44LGLpNeK28gi0vZ/aD8=\");\n_c = AdministradordeImagenes;\nexport default AdministradordeImagenes;\nvar _c;\n$RefreshReg$(_c, \"AdministradordeImagenes\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AdministradordeImagenes","_s","selectedFile","setSelectedFile","uploadSuccess","setUploadSuccess","uploadedFilePath","setUploadedFilePath","IMGBB_API_KEY","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","uploadRes","post","headers","url","data","saveImageRes","idAlojamiento","RutaArchivo","status","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/grego/Desktop/desarrollo-web/src/components/AdministradordeImagenes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AdministradordeImagenes.css';\r\n\r\nconst AdministradordeImagenes = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadedFilePath, setUploadedFilePath] = useState('');\r\n  const IMGBB_API_KEY = 'fe710239ec2669c60deafe46f166c86d'; // Reemplaza con tu API key de ImgBB\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    try {\r\n      const uploadRes = await axios.post(`https://api.imgbb.com/1/upload?key=${IMGBB_API_KEY}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      const { url } = uploadRes.data.data;\r\n      setUploadedFilePath(url);\r\n\r\n      const saveImageRes = await axios.post('http://localhost:5000/imagen/createImagen', {\r\n        idAlojamiento: 1,\r\n        RutaArchivo: url,\r\n      });\r\n\r\n      if (saveImageRes.status === 200) {\r\n        setUploadSuccess(true);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setUploadSuccess(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Administrador de Im√°genes</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Subir Imagen</button>\r\n      </form>\r\n      {uploadSuccess && (\r\n        <div className=\"success-message\">\r\n          Imagen subida exitosamente. URL: <a href={uploadedFilePath} target=\"_blank\" rel=\"noopener noreferrer\">{uploadedFilePath}</a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdministradordeImagenes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMY,aAAa,GAAG,kCAAkC,CAAC,CAAC;;EAE1D,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BP,eAAe,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,YAAY,CAAC;IAEtC,IAAI;MACF,MAAMgB,SAAS,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,sCAAsCX,aAAa,EAAE,EAAEO,QAAQ,EAAE;QAClGK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,MAAM;QAAEC;MAAI,CAAC,GAAGH,SAAS,CAACI,IAAI,CAACA,IAAI;MACnCf,mBAAmB,CAACc,GAAG,CAAC;MAExB,MAAME,YAAY,GAAG,MAAM1B,KAAK,CAACsB,IAAI,CAAC,2CAA2C,EAAE;QACjFK,aAAa,EAAE,CAAC;QAChBC,WAAW,EAAEJ;MACf,CAAC,CAAC;MAEF,IAAIE,YAAY,CAACG,MAAM,KAAK,GAAG,EAAE;QAC/BrB,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBtB,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,oBACEN,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhC,OAAA;MAAAgC,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCpC,OAAA;MAAMqC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBAC3BhC,OAAA;QAAOsC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAE7B;MAAiB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDpC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACN/B,aAAa,iBACZL,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,mCACE,eAAAhC,OAAA;QAAGwC,IAAI,EAAEjC,gBAAiB;QAACK,MAAM,EAAC,QAAQ;QAAC6B,GAAG,EAAC,qBAAqB;QAAAT,QAAA,EAAEzB;MAAgB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CArDID,uBAAuB;AAAAyC,EAAA,GAAvBzC,uBAAuB;AAuD7B,eAAeA,uBAAuB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}